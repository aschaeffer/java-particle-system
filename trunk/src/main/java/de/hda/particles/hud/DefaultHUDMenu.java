package de.hda.particles.hud;

import de.hda.particles.domain.GravityPointConfigurationFactory;
import de.hda.particles.emitter.*;
import de.hda.particles.features.*;
import de.hda.particles.modifier.*;
import de.hda.particles.renderer.*;
import de.hda.particles.renderer.types.*;
import de.hda.particles.scene.Scene;

public class DefaultHUDMenu {

	public HUDMenuEntry createMenu(Scene s) {
		HUDMenuEntry root = HUDMenuEntry.createRoot("Particle System Main Menu");
		HUDMenuEntry scene = HUDMenuEntry.create(root, "Scene");
		HUDMenuEntry renderer = HUDMenuEntry.create(scene, "Renderer");
		HUDMenuEntry rendererOptions = HUDMenuEntry.create(renderer, "Renderer Options");
		HUDMenuEntry rendererOptionsBBPCR = HUDMenuEntry.create(rendererOptions, "Bounding Box Particle Culling Renderer");
		HUDMenuEntry.create(rendererOptionsBBPCR, "Show Particle Culling Box", HUDCommandTypes.SHOW_RENDERER, BoundingBoxParticleCullingRenderer.class);
		HUDMenuEntry.create(rendererOptionsBBPCR, "Hide Particle Culling Box", HUDCommandTypes.HIDE_RENDERER, BoundingBoxParticleCullingRenderer.class);
		HUDMenuEntry rendererOptionsEmitter = HUDMenuEntry.create(rendererOptions, "Emitter Renderer");
		HUDMenuEntry.create(rendererOptionsEmitter, "Show Emitters", HUDCommandTypes.SHOW_RENDERER, EmitterRenderer.class);
		HUDMenuEntry.create(rendererOptionsEmitter, "Hide Emitters", HUDCommandTypes.HIDE_RENDERER, EmitterRenderer.class);
		HUDMenuEntry rendererOptionsGravityPoint = HUDMenuEntry.create(rendererOptions, "Gravity Point Renderer");
		HUDMenuEntry.create(rendererOptionsGravityPoint, "Show Gravity Points", HUDCommandTypes.SHOW_RENDERER, GravityPointRenderer.class);
		HUDMenuEntry.create(rendererOptionsGravityPoint, "Hide Gravity Points", HUDCommandTypes.HIDE_RENDERER, GravityPointRenderer.class);
		HUDMenuEntry rendererOptionsBlackHole = HUDMenuEntry.create(rendererOptions, "Black Hole Renderer");
		HUDMenuEntry.create(rendererOptionsBlackHole, "Show Black Holes", HUDCommandTypes.SHOW_RENDERER, BlackHoleRenderer.class);
		HUDMenuEntry.create(rendererOptionsBlackHole, "Hide Black Holes", HUDCommandTypes.HIDE_RENDERER, BlackHoleRenderer.class);
		HUDMenuEntry rendererOptionsAxis = HUDMenuEntry.create(rendererOptions, "Axis Renderer");
		HUDMenuEntry.create(rendererOptionsAxis, "Show Axis", HUDCommandTypes.SHOW_RENDERER, AxisRenderer.class);
		HUDMenuEntry.create(rendererOptionsAxis, "Hide Axis", HUDCommandTypes.HIDE_RENDERER, AxisRenderer.class);
		HUDMenuEntry rendererOptionsCamera = HUDMenuEntry.create(rendererOptions, "Camera Renderer");
		HUDMenuEntry.create(rendererOptionsCamera, "Show Cameras", HUDCommandTypes.SHOW_RENDERER, CameraRenderer.class);
		HUDMenuEntry.create(rendererOptionsCamera, "Hide Cameras", HUDCommandTypes.HIDE_RENDERER, CameraRenderer.class);
		HUDMenuEntry rendererOptionsSkyBox = HUDMenuEntry.create(rendererOptions, "SkyBox Renderer");
		HUDMenuEntry.create(rendererOptionsSkyBox, "Harmony Skybox", HUDCommandTypes.SELECT_SKYBOX, "harmony");
		HUDMenuEntry.create(rendererOptionsSkyBox, "Interstellar Skybox", HUDCommandTypes.SELECT_SKYBOX, "interstellar");
		HUDMenuEntry.create(rendererOptionsSkyBox, "Sleepy Hollow Skybox", HUDCommandTypes.SELECT_SKYBOX, "sleepyhollow");
		HUDMenuEntry.create(rendererOptionsSkyBox, "Show SkyBox", HUDCommandTypes.SHOW_RENDERER, SkyBoxRenderer.class);
		HUDMenuEntry.create(rendererOptionsSkyBox, "Hide SkyBox", HUDCommandTypes.HIDE_RENDERER, SkyBoxRenderer.class);
		HUDMenuEntry addRenderer = HUDMenuEntry.create(renderer, "Add Renderer");
		HUDMenuEntry.create(addRenderer, "Bounding Box Particle Culling Renderer", HUDCommandTypes.ADD_RENDERER, BoundingBoxParticleCullingRenderer.class);
		HUDMenuEntry.create(addRenderer, "Emitter Renderer", HUDCommandTypes.ADD_RENDERER, EmitterRenderer.class);
		HUDMenuEntry.create(addRenderer, "Gravity Point Renderer", HUDCommandTypes.ADD_RENDERER, GravityPointRenderer.class);
		HUDMenuEntry.create(addRenderer, "Black Hole Renderer", HUDCommandTypes.ADD_RENDERER, BlackHoleRenderer.class);
		HUDMenuEntry.create(addRenderer, "Axis Renderer", HUDCommandTypes.ADD_RENDERER, AxisRenderer.class);
		HUDMenuEntry.create(addRenderer, "Camera Renderer", HUDCommandTypes.ADD_RENDERER, CameraRenderer.class);
		HUDMenuEntry.create(addRenderer, "SkyBox Renderer", HUDCommandTypes.ADD_RENDERER, SkyBoxRenderer.class);
		HUDMenuEntry camera = HUDMenuEntry.create(scene, "Cameras");
		HUDMenuEntry.create(camera, "Add Camera", HUDCommandTypes.ADD_CAMERA);
		HUDMenuEntry.create(camera, "Remove Camera", HUDCommandTypes.REMOVE_CAMERA);
		HUDMenuEntry renderTypes = HUDMenuEntry.create(scene, "Render Types");
		HUDMenuEntry addPointSpriteRenderTypes = HUDMenuEntry.create(renderTypes, "Add Point Sprite Render Type");
		HUDMenuEntry addPrimitiveRenderTypes = HUDMenuEntry.create(renderTypes, "Add Primtive Render Type");
		HUDMenuEntry addComplexRenderTypes = HUDMenuEntry.create(renderTypes, "Add Complex Render Type");
		HUDMenuEntry addTechnicalRenderTypes = HUDMenuEntry.create(renderTypes, "Add Technical Render Type");
		HUDMenuEntry.create(addComplexRenderTypes, "Colored Point", HUDCommandTypes.ADD_RENDER_TYPE, ColoredPointRenderType.class);
		HUDMenuEntry.create(addComplexRenderTypes, "Complex Point (Color & Size)", HUDCommandTypes.ADD_RENDER_TYPE, ComplexPointRenderType.class);
		HUDMenuEntry.create(addComplexRenderTypes, "Rain", HUDCommandTypes.ADD_RENDER_TYPE, SimpleRainRenderType.class);
		HUDMenuEntry.create(addPrimitiveRenderTypes, "Simple Point", HUDCommandTypes.ADD_RENDER_TYPE, SimplePointRenderType.class);
		HUDMenuEntry.create(addPrimitiveRenderTypes, "Simple Line Strip", HUDCommandTypes.ADD_RENDER_TYPE, SimpleLineStripRenderType.class);
		HUDMenuEntry.create(addPrimitiveRenderTypes, "Simple Triangle", HUDCommandTypes.ADD_RENDER_TYPE, SimpleTriangleRenderType.class);
		HUDMenuEntry.create(addPrimitiveRenderTypes, "Simple Triangle Strip", HUDCommandTypes.ADD_RENDER_TYPE, SimpleTriangleStripRenderType.class);
		HUDMenuEntry.create(addPrimitiveRenderTypes, "Simple Triangle Fan", HUDCommandTypes.ADD_RENDER_TYPE, SimpleTriangleFanRenderType.class);
		HUDMenuEntry.create(addPrimitiveRenderTypes, "Simple Quads", HUDCommandTypes.ADD_RENDER_TYPE, SimpleQuadsRenderType.class);
		HUDMenuEntry.create(addPrimitiveRenderTypes, "Simple Sphere", HUDCommandTypes.ADD_RENDER_TYPE, SimpleSphereRenderType.class);
		HUDMenuEntry.create(addPointSpriteRenderTypes, "Ball", HUDCommandTypes.ADD_RENDER_TYPE, PointSpriteRenderType.class);
		HUDMenuEntry.create(addPointSpriteRenderTypes, "Smoke", HUDCommandTypes.ADD_RENDER_TYPE, SmokeRenderType.class);
		HUDMenuEntry.create(addPointSpriteRenderTypes, "Electric", HUDCommandTypes.ADD_RENDER_TYPE, ElectricRenderType.class);
		HUDMenuEntry.create(addPointSpriteRenderTypes, "Explosion", HUDCommandTypes.ADD_RENDER_TYPE, ExplosionRenderType.class);
		HUDMenuEntry.create(addPointSpriteRenderTypes, "FireBall", HUDCommandTypes.ADD_RENDER_TYPE, FireBallRenderType.class);
		HUDMenuEntry.create(addPointSpriteRenderTypes, "Flames", HUDCommandTypes.ADD_RENDER_TYPE, FlamesRenderType.class);
		HUDMenuEntry.create(addPointSpriteRenderTypes, "SFlare", HUDCommandTypes.ADD_RENDER_TYPE, SFlareRenderType.class);
		HUDMenuEntry.create(addPointSpriteRenderTypes, "Snow", HUDCommandTypes.ADD_RENDER_TYPE, SnowRenderType.class);
		HUDMenuEntry.create(addPointSpriteRenderTypes, "Star", HUDCommandTypes.ADD_RENDER_TYPE, StarRenderType.class);
		HUDMenuEntry.create(addTechnicalRenderTypes, "Null", HUDCommandTypes.ADD_RENDER_TYPE, SimplePointRenderType.class);
		HUDMenuEntry.create(addTechnicalRenderTypes, "Velocity Indicator", HUDCommandTypes.ADD_RENDER_TYPE, SimpleVelocityRenderType.class);
		HUDMenuEntry.create(addTechnicalRenderTypes, "MassSpring", HUDCommandTypes.ADD_RENDER_TYPE, MassSpringRenderType.class);
		HUDMenuEntry.create(scene, "Load Scene", HUDCommandTypes.LOAD_SCENE);
		HUDMenuEntry.create(scene, "Save Scene", HUDCommandTypes.SAVE_SCENE);
		HUDMenuEntry.create(scene, "Remove all Particles", HUDCommandTypes.REMOVE_ALL_PARTICLES);
		HUDMenuEntry physics = HUDMenuEntry.create(root, "Physics");
		HUDMenuEntry emitters = HUDMenuEntry.create(physics, "Emitters");
		HUDMenuEntry addEmitters = HUDMenuEntry.create(emitters, "Add Emitter");
		HUDMenuEntry.create(addEmitters, "Point", HUDCommandTypes.ADD_EMITTER, PointParticleEmitter.class);
		HUDMenuEntry.create(addEmitters, "Plane", HUDCommandTypes.ADD_EMITTER, PlaneParticleEmitter.class);
		HUDMenuEntry.create(addEmitters, "Ring", HUDCommandTypes.ADD_EMITTER, RingParticleEmitter.class);
		HUDMenuEntry.create(addEmitters, "Sphere", HUDCommandTypes.ADD_EMITTER, SphereParticleEmitter.class);
		HUDMenuEntry.create(addEmitters, "Wave", HUDCommandTypes.ADD_EMITTER, WaveParticleEmitter.class);
		HUDMenuEntry.create(addEmitters, "Point (Pulse Rate)", HUDCommandTypes.ADD_EMITTER, PulseRatePointParticleEmitter.class);
		HUDMenuEntry.create(addEmitters, "Point (Fast)", HUDCommandTypes.ADD_EMITTER, FastPointParticleEmitter.class);
		HUDMenuEntry modifiers = HUDMenuEntry.create(physics, "Modifiers");
		HUDMenuEntry addModifiers = HUDMenuEntry.create(modifiers, "Add Modifier");
		HUDMenuEntry addModifiersGravity = HUDMenuEntry.create(addModifiers, "Gravity");
		HUDMenuEntry addModifiersVelocity = HUDMenuEntry.create(addModifiers, "Velocity");
		HUDMenuEntry addModifiersColors = HUDMenuEntry.create(addModifiers, "Colors");
		HUDMenuEntry addModifiersOther = HUDMenuEntry.create(addModifiers, "Other Modifiers");
		HUDMenuEntry.create(addModifiersGravity, "Gravity Point", HUDCommandTypes.ADD_MODIFIER, GravityPoint.class, GravityPointConfigurationFactory.class);
		HUDMenuEntry.create(addModifiersGravity, "Gravity Plane", HUDCommandTypes.ADD_MODIFIER, GravityPlane.class);
		HUDMenuEntry.create(addModifiersGravity, "Black Hole", HUDCommandTypes.ADD_MODIFIER, BlackHole.class);
		HUDMenuEntry.create(addModifiersVelocity, "Velocity Transformation", HUDCommandTypes.ADD_MODIFIER, ParticleVelocityTransformation.class);
		HUDMenuEntry.create(addModifiersVelocity, "Mass Spring Transformation", HUDCommandTypes.ADD_MODIFIER, MassSpringTransformation.class);
		HUDMenuEntry.create(addModifiersColors, "Linear Color Transformation", HUDCommandTypes.ADD_MODIFIER, ParticleLinearColorTransformation.class);
		HUDMenuEntry.create(addModifiersColors, "Rainbow Color Transformation", HUDCommandTypes.ADD_MODIFIER, RainbowColorTransformation.class);
		HUDMenuEntry.create(addModifiersColors, "Random Color Transformation", HUDCommandTypes.ADD_MODIFIER, RandomColorTransformation.class);
		HUDMenuEntry.create(addModifiersOther, "Bounding Box Particle Culling", HUDCommandTypes.ADD_MODIFIER, BoundingBoxParticleCulling.class);
		HUDMenuEntry.create(addModifiersOther, "Linear Size Transformation", HUDCommandTypes.ADD_MODIFIER, ParticleLinearSizeTransformation.class);
		HUDMenuEntry.create(addModifiersOther, "Particle Debugger", HUDCommandTypes.ADD_MODIFIER, ParticleDebugger.class);
		HUDMenuEntry features = HUDMenuEntry.create(physics, "Particle Features");
		HUDMenuEntry addFeatures = HUDMenuEntry.create(features, "Add Feature");
		HUDMenuEntry.create(addFeatures, "Color", HUDCommandTypes.ADD_FEATURE, ParticleColor.class);
		HUDMenuEntry.create(addFeatures, "Size", HUDCommandTypes.ADD_FEATURE, ParticleSize.class);
		HUDMenuEntry.create(addFeatures, "Initial Velocity Scatter", HUDCommandTypes.ADD_FEATURE, ParticleInitialVelocityScatter.class);
		HUDMenuEntry.create(addFeatures, "MassSpring", HUDCommandTypes.ADD_FEATURE, MassSpring.class);
		HUDMenuEntry.create(physics, "Load System", HUDCommandTypes.LOAD_SYSTEM);
		HUDMenuEntry.create(physics, "Save System", HUDCommandTypes.SAVE_SYSTEM);
		HUDMenuEntry.create(physics, "Remove all Particles", HUDCommandTypes.REMOVE_ALL_PARTICLES);
		HUDMenuEntry.create(root, "Exit", HUDCommandTypes.EXIT);
		return root;
	}
}
